When would you want to use a remote repository rather than keeping all your work local?

A remote repository keeps your work in a central location where you access it from other
computers. It is also a backup, so if you lose a hard drive on your local, you don't 
have to lose all of your work. Lastly, it provides a central location where others you
are working with can go to see the latest version and publish their own changes.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

You would want to specify when to pull changes manually because you might be working in
a branch and collaborating with someone, and you don't want to pull the other person's changes
until you're finished with your own. How does git deal with changes made to a single branch that
might conflict with each other?

Describe the differences between forks, clones, and branches. When would you use one instead of another?

You fork a whole repository on git hub if you want to start with the base of someone else's
code, but want to make your own version and give credeit to the person who made the original.
You clone a repository when you want to work on the repository locally. You create a branch when you want
to make changes that are experimental, such as a bug fix or new feature, without messing
with the production code or stable version. They are really each totally different concepts,
and it doesn't seem like they should be used interchangeably.

What is the benefit of having a copy of the last known state of the remote stored locally?

The benefit is that your local git can know what changes you made locally since the time you last
pulled or cloned. This way, you can know some diffs even when you're offline. You can also know the diff
between your local and the remote if you have internet access, and git can easily tell where you
diverged, because it can compare the last known updated remote on the local with the current state
of the remote and see where the local and remote diverged.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

If you weren't using Git or GitHub, you would have to keep your files in a central location so
multiple people could access and edit them. It might be easier not to have to use the command line and learn
all of the git commands, but it would be harder because you wouldn't be able to easily keep track of
what changes were made when, what the latest and most stable version of the code was, or merge changes when
different people are working on changes of the same files at the same time.




